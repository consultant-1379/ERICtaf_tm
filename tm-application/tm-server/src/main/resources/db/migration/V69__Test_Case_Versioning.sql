CREATE TABLE IF NOT EXISTS `REVIEW_GROUP` (
  `id`         BIGINT NOT NULL AUTO_INCREMENT,
  `deleted`    BOOLEAN NULL DEFAULT FALSE,
  `name`       VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `UK_REVIEW_GROUP` (`id`, `name`)
);

CREATE TABLE IF NOT EXISTS `REVIEW_GROUP_AUD` (
  `id`         BIGINT NOT NULL AUTO_INCREMENT,
  `deleted`    BOOLEAN NULL DEFAULT FALSE,
  `name`       VARCHAR(255) NOT NULL,
  `REV`        INT NOT NULL,
  `REVTYPE`    TINYINT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `REV`),
  CONSTRAINT `FK_REVIEW_GROUP_AUD_AUDIT_REVISION_ENTITY` FOREIGN KEY (`REV`) REFERENCES `AUDIT_REVISION_ENTITY` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS `REVIEW_GROUP_USERS` (
  `id`                    BIGINT NOT NULL AUTO_INCREMENT,
  `review_group_id`       BIGINT NOT NULL,
  `user_id`               BIGINT NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `FK_REVIEW_GROUP_USERS` FOREIGN KEY (`user_id`) REFERENCES `USERS` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `FK_REVIEW_GROUP_IDS` FOREIGN KEY (`review_group_id`) REFERENCES `REVIEW_GROUP` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS `REVIEW_GROUP_USERS_AUD` (
  `id`                    BIGINT NOT NULL AUTO_INCREMENT,
  `review_group_id`       BIGINT NOT NULL,
  `user_id`               BIGINT NOT NULL,
  `REV`                   INT NOT NULL,
  `REVTYPE`               TINYINT NULL DEFAULT NULL,
  PRIMARY KEY (`id`, `REV`),
  CONSTRAINT `FK_REVIEW_GROUP_USERS_AUD_AUDIT_REVISION_ENTITY` FOREIGN KEY (`REV`) REFERENCES `AUDIT_REVISION_ENTITY` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
);

ALTER TABLE `TEST_CASE_VERSIONS` DROP FOREIGN KEY `FK_TEST_CASE_VERSIONS_TEST_CASE`;
ALTER TABLE `TEST_CASE_VERSIONS` DROP INDEX `UK_TEST_CASE_VERSIONS_SEQUENCE`;

-- reset old test case data to default
UPDATE `TEST_CASE_VERSIONS` set `sequence_number` = 0 where `sequence_number` is null;
UPDATE `TEST_CASE_VERSIONS_AUD` set `sequence_number` = 0 where `sequence_number` is null;

-- set all test cases in review status to preliminary
UPDATE `TEST_CASE_VERSIONS` set `test_case_status` = 2 where `test_case_status` = 3;

-- change test case status to not null
UPDATE `TEST_CASE_VERSIONS` set `test_case_status` = 2 where `test_case_status` is null;
UPDATE `TEST_CASE_VERSIONS_AUD` set `test_case_status` = 2 where `test_case_status` is null;
ALTER TABLE `TEST_CASE_VERSIONS` CHANGE COLUMN `test_case_status` `test_case_status` INTEGER NOT NULL;
ALTER TABLE `TEST_CASE_VERSIONS_AUD` CHANGE COLUMN `test_case_status` `test_case_status` INTEGER NOT NULL;

-- change sequence number to major version and add  minor version
ALTER TABLE `TEST_CASE_VERSIONS` CHANGE COLUMN `sequence_number` `major_version` BIGINT NOT NULL DEFAULT 0;
ALTER TABLE `TEST_CASE_VERSIONS_AUD` CHANGE COLUMN `sequence_number` `major_version` BIGINT NOT NULL DEFAULT 0;

ALTER TABLE `TEST_CASE_VERSIONS` ADD COLUMN `minor_version` BIGINT NOT NULL DEFAULT 1;
ALTER TABLE `TEST_CASE_VERSIONS_AUD` ADD COLUMN `minor_version` BIGINT NOT NULL DEFAULT 1;


CREATE UNIQUE INDEX `UK_TEST_CASE_VERSIONS_VERSION` ON `TEST_CASE_VERSIONS` (`test_case_id` ASC, `major_version` DESC, `minor_version` DESC );
ALTER TABLE `TEST_CASE_VERSIONS` ADD CONSTRAINT `FK_TEST_CASE_VERSIONS_TEST_CASE` FOREIGN KEY (`test_case_id`) REFERENCES `TEST_CASES` (`id`)
  ON DELETE RESTRICT
  ON UPDATE RESTRICT;

ALTER TABLE `TEST_CASE_VERSIONS` ADD COLUMN `review_group_id` BIGINT NULL DEFAULT NULL;
ALTER TABLE `TEST_CASE_VERSIONS_AUD` ADD COLUMN `review_group_id` BIGINT NULL DEFAULT NULL;

ALTER TABLE `TEST_CASE_VERSIONS` ADD CONSTRAINT `FK_TC_VERSIONS_REVIEW_GROUP` FOREIGN KEY (`review_group_id`) REFERENCES `REVIEW_GROUP` (`id`)
ON DELETE RESTRICT
ON UPDATE RESTRICT;

